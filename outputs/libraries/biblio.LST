Turbo Assembler	 Version 5.0	    03-20-14 19:26:19	    Page 1
biblio.asm



      1					 ;*******************************************************
      2					 ;   Matiere : Schemas de traduction
      3					 ;   Sujet   : Codage des procedures sans parametres
      4					 ;   Module  : entrees sorties
      5					 ;   Auteurs :	Marie-Jo Pedrono
      6					 ;   Groupe :
      7					 ;*******************************************************
      8					 ;
      9					 ;   Description : Bibliotheque	des entrees-sorties DOS
     10					 ;    pour le compilateur ; sources pour le module biblio.obj
     11					 ;
     12					 ;*******************************************************
     13					 ;*******************************************************
     14					 ;
     15					 ;   Variables globales	:	 aucune
     16					 ;   Procedures	exportees :	 lirent, ecrent,ecrbool
     17					 ;					 ecrch,ecrbool
     18					 ;   Variables exportees :	 aucune
     19					 ;
     20					 ;*******************************************************
     21
     22						 PUBLIC	lirent,ecrent,ecrcar,ecrbool,ecrch,ligsuiv
     23	    0000				 .MODEL	small
     24						 .586
     25	    0000				 .DATA
     26	    0000  ????			 vlu	 dw	 ?
     27	    0002				 .CODE
     28					 ;-------------------------------------------------------
     29					 ;   Nom : lirent
     30					 ;   Description : lit une suite de caracteres representant
     31					 ;		 un chiffre. Le	traduit	en binaire et stocke
     32					 ;		 le resultat a l'adresse situee	en sommet de pile
     33					 ;	 (on ne	traite pas les cas de debordement)
     34					 ;-------------------------------------------------------
     35					 ;   Parametres	d'entree : aucun
     36					 ;   Parametres	de sortie : L'adresse de N est dans la pile
     37					 ;   Mode de transfert des parametres :	pile
     38					 ;   Variables globales	modifiees : aucune
     39					 ;   Variables locales : aucune	(utilisation des registres)
     40					 ;-------------------------------------------------------
     41		  =0004			 N	 EQU	 4		 ;deplacement pour @N
     42	    0000  ????			 signe dw	 ?
     43
     44	    0002			 lirent	proc near
     45	    0002  C8 0000 00			 enter	 0,0
     46	    0006  B9 0000			 mov	 cx,0
     47	    0009  BB 0000			 mov	 bx,0	 ;		 nombre	:= 0;
     48	    000C  2E: C7 06 0000r 0001		 mov	 signe,1 ;	 signe :=positif;
     49									 ;	 jqa chiffre trouve faire
     50	    0013  B4 01			 faire:	mov	 ah,01h	 ;
     51	    0015  CD 21				 int	 21h	 ;		 ;lire(car)
     52	    0017  3C 2D				 cmp	 al,'-'	 ;	 si carlu = '-'	alors signe := negatif
     53	    0019  75 0D	90 90			 jne	 cherchif
     54	    001D  2E: C7 06 0000r FFFF		 mov	 signe,-1
     55	    0024  B4 01				 mov	 ah,01h
     56	    0026  CD 21				 int	 21h			 ; lire(car)
     57										 ;fsi
Turbo Assembler	 Version 5.0	    03-20-14 19:26:19	    Page 2
biblio.asm



     58	    0028			 cherchif:
     59	    0028  3C 30				 cmp	 al,'0'	 ;	 si car	< '0' ou car > '9'
     60	    002A  7C 0C	90 90			 jl	 fait	 ;
     61	    002E  3C 39				 cmp	 al,'9'	 ;
     62	    0030  7F 06	90 90			 jg	 fait	 ;		 sortir	par chiftrouv
     63	    0034  7E 04	90 90			 jle   chiftrouv
     64
     65	    0038  EB D9			 fait: jmp faire
     66
     67	    003A			 chiftrouv:
     68	    003A  2C 30				 sub	 al,'0'		 ; nombre := car -'0'
     69	    003C  8A C8				 mov	 cl,al
     70	    003E  BB 0000			 mov	 bx,0
     71	    0041  8A D8				 mov	 bl,al
     72
     73
     74	    0043  B4 01			 bouc:	 mov	 ah,01h	 ; tant	que chiffre trouve faire
     75								 ;
     76	    0045  CD 21				 int	 21h	 ;	 lire(car)
     77	    0047  3C 30				 cmp	 al,'0'	 ;	 si car	< '0' ou car > '9'
     78	    0049  7C 17	90 90			 jl	 finb	 ;
     79	    004D  3C 39				 cmp	 al,'9';
     80	    004F  7F 11	90 90			 jg	 finb	 ;		 sortir	par fin
     81	    0053  2C 30				 sub	 al,'0'	 ;
     82	    0055  8A C8				 mov	 cl,al	 ;
     83	    0057  8B C3				 mov	 ax,bx	 ;
     84	    0059  6B C0	0A			 imul	 ax,10	 ;	 N:=N*10+car-'0'
     85	    005C  8B D8				 mov	 bx,ax	 ;
     86	    005E  03 D9				 add	 bx,cx	 ;
     87	    0060  EB E1				 jmp	 bouc	 ;	 ;fait
     88
     89	    0062  2E: 83 3E 0000r FF	 finb: cmp	 signe,-1	 ;si signe = negatif alors
     90	    0068  75 04	90 90			 jne	 positif
     91	    006C  F7 DB				 neg	 bx		 ;	 N:=-N
     92	    006E			 positif:
     93	    006E  8B 7E	04			 mov  di,[bp+N]
     94	    0071  89 1D				 mov  [di],bx
     95	    0073  C9				 leave
     96	    0074  C2 0002			 ret	 2
     97	    0077				 endp			 ; fin lirent
     98
     99					 ;-------------------------------------------------------
    100					 ;   Nom : ecrent
    101					 ;   Description : affichage d'un entier
    102					 ;-------------------------------------------------------
    103					 ;   Parametres	d'entree :l'entier a afficher est dans la pile
    104					 ;   Parametres	de sortie : aucun
    105					 ;   Mode de transfert des parametres :	pile
    106					 ;   Variables globales	modifiees : aucune
    107					 ;   Variables locales :
    108					 ;-------------------------------------------------------
    109	    0077				 .DATA
    110	    0002  0A*(??)		 chaine	 db	 10 DUP	(?)	 ; Reservation de 10 octets non	initialises
    111	    000C  ??			 finch	   db	 ?
    112					 Pt	 EQU	 bx
    113		  =0004			 X	 EQU	 4			 ; deplacement dans la pile
    114
Turbo Assembler	 Version 5.0	    03-20-14 19:26:19	    Page 3
biblio.asm



    115	    000D				 .CODE
    116	    0077			 ecrent	proc near
    117	    0077  C8 0000 00			 enter	 0,0
    118	    007B  BB 000Cr			 mov	 Pt,OFFSET finch
    119	    007E  C6 07	24			 mov	 byte ptr[Pt],'$'	 ; $ est la marque de fin de chaine
    120	    0081  2E: C7 06 0000r 0001		 mov	 signe,1
    121	    0088  8B 46	04			 mov	 ax,[bp+X]		 ;cas
    122
    123	    008B  3D 0000			 cmp	 ax,0			 ;	 X=0 ->	met '0'	dans le	tampon
    124	    008E  75 09	90 90			 jne	 casuiv
    125	    0092  4B				 dec   Pt
    126	    0093  C6 07	30			 mov	 byte ptr [Pt],'0'
    127	    0096  EB 38	90			 jmp	 affiche
    128
    129	    0099			 casuiv:
    130	    0099  7F 0B	90 90			 jg	 posit			 ;    X<0   Signe := negatif
    131	    009D  2E: C7 06 0000r FFFF		 mov	 signe,-1
    132	    00A4  F7 D8				 neg	 ax			 ;		 X:=-X
    133										 ; fcas
    134	    00A6  B9 000A		 posit : mov	 cx,10
    135	    00A9  BA 0000		 fairee: mov	 dx,0			 ; faire tant que nombre positif
    136	    00AC  F7 F1				 div	 cx				 ;
    137	    00AE  3C 00				 cmp	 al,0				 ;
    138	    00B0  74 0A	90 90			 jz	 fine				 ;
    139	    00B4  4B				 dec	 Pt				 ;
    140	    00B5  80 C2	30			 add	 dl,'0'			 ;
    141	    00B8  88 17				 mov	 [Pt],dl		 ;	 Inserer le car	dans la	chaine
    142	    00BA  EB ED				 jmp	 fairee			 ; fait
    143	    00BC  4B			 fine:	 dec	 Pt
    144	    00BD  80 C2	30			 add	 dl,'0'
    145	    00C0  88 17				 mov	 [Pt],dl
    146
    147	    00C2  2E: 83 3E 0000r FF		 cmp	 signe,-1
    148	    00C8  75 06	90 90			 jne	 affiche	 ;	 si signe negatif mettre '-' dans le tampon
    149	    00CC  4B				 dec	 Pt
    150	    00CD  C6 07	2D			 mov   byte ptr	[Pt],'-'
    151
    152	    00D0			 affiche :
    153	    00D0  8B D3				 mov	 dx,Pt
    154	    00D2  B4 09				 mov	 ah,09h		 ; Fonction 0 =	ecriture d'une chaine
    155	    00D4  CD 21				 int	 21h			 ; Interruption	21 : appel a DOS
    156	    00D6  C9				 leave
    157	    00D7  C2 0002			 ret	 2
    158	    00DA				 endp			 ; fin ecrent
    159					 ;--------------------------------------------------------
    160					 ;-------------------------------------------------------
    161					 ;   Nom : ecrcar
    162					 ;   Description : affichage d'un caractere
    163					 ;-------------------------------------------------------
    164					 ;   Parametres	d'entree :le caractere	est dans la pile
    165					 ;   Parametres	de sortie : aucun
    166					 ;   Mode de transfert des parametres :	pile
    167					 ;   Variables globales	modifiees : aucune
    168					 ;   Variables locales :
    169					 ;-------------------------------------------------------
    170
    171		  =0004			 car	 equ	 4	 ;deplacement dans la pile
Turbo Assembler	 Version 5.0	    03-20-14 19:26:19	    Page 4
biblio.asm



    172
    173	    00DA			 ecrcar	 proc	 near
    174	    00DA  C8 0000 00			 enter	 0,0
    175	    00DE  8A 56	04			 mov	 dl,[bp+car]
    176	    00E1  B4 02				 mov	 ah,02
    177	    00E3  CD 21				 int	 21h		 ; ecriture du caractere
    178	    00E5  C9				 leave
    179	    00E6  C2 0002			 ret	 2
    180	    00E9				 endp
    181
    182					 ;-------------------------------------------------------
    183					 ;   Nom : ecrbool
    184					 ;   Description : affichage d'un booleen
    185					 ;-------------------------------------------------------
    186					 ;   Parametres	d'entree :le booleen est dans la pile
    187					 ;   Parametres	de sortie : aucun
    188					 ;   Mode de transfert des parametres :	pile
    189					 ;   Variables globales	modifiees : aucune
    190					 ;   Variables locales :
    191					 ;-------------------------------------------------------
    192	    00E9				 .DATA
    193	    000D  76 72	61 69 24	 vrai	 db	 'vrai$' ; notation vrai et faux
    194	    0012  66 61	75 78 24	 faux  db	 'faux$'
    195		  =0004			 bool	 equ	 4
    196	    0017				 .CODE
    197	    00E9			 ecrbool proc near
    198	    00E9  C8 0000 00			 enter	 0,0
    199	    00ED  8B 46	04			 mov	 ax,[bp+bool]
    200	    00F0  3D 0000			 cmp	 ax,0
    201	    00F3  74 08	90 90			 je	 casfaux ;	 si bool = vrai
    202	    00F7  BA 000Dr			 lea	 dx,vrai ;	  alors	ecrire('vrai')
    203	    00FA  EB 04	90			 jmp	 ecrb
    204	    00FD			 casfaux:
    205	    00FD  BA 0012r			 lea	 dx,faux ;	 sinon ecrire('faux')
    206	    0100			 ecrb :
    207	    0100  B4 09				 mov	 ah,09h
    208	    0102  CD 21				 int	 21h
    209	    0104  C9				 leave
    210	    0105  C2 0002			 ret	 2
    211	    0108				 endp
    212
    213					 ;-------------------------------------------------------
    214					 ;   Nom : ecrch
    215					 ;   Description : affichage d'une chaine
    216					 ;-------------------------------------------------------
    217					 ;   Parametres	d'entree :adresse de la	chaine	dans la	pile
    218					 ;   Parametres	de sortie : aucun
    219					 ;   Mode de transfert des parametres :	pile
    220					 ;   Variables globales	modifiees : aucune
    221					 ;   Variables locales :
    222					 ;-------------------------------------------------------
    223		  =0004			 depch	 equ	 4
    224	    0108			 ecrch proc near
    225	    0108  C8 0000 00			 enter	 0,0
    226	    010C  8B 56	04			 mov	 dx,[bp+depch]	 ; ecriture de la chaine
    227	    010F  B4 09				 mov	 ah,09h
    228	    0111  CD 21				 int	 21h
Turbo Assembler	 Version 5.0	    03-20-14 19:26:19	    Page 5
biblio.asm



    229	    0113  C9				 leave
    230	    0114  C2 0002			 ret	 2
    231	    0117				 endp
    232
    233					 ;-------------------------------------------------------
    234					 ;   Nom : ligsuiv
    235					 ;   Description : passage a la	ligne
    236					 ;-------------------------------------------------------
    237					 ;   Parametres	d'entree : aucun
    238					 ;   Parametres	de sortie : aucun
    239					 ;   Mode de transfert des parametres :
    240					 ;   Variables globales	modifiees : aucune
    241					 ;   Variables locales :
    242					 ;-------------------------------------------------------
    243	    0117				 .DATA
    244	    0017  0D 0A	24		 alalign db	 13,10,'$'	 ; chaine a afficher
    245	    001A				 .CODE
    246	    0117			 ligsuiv proc near
    247	    0117  BA 0017r			 lea	 dx,alalign
    248	    011A  B4 09				 mov	 ah,09h		 ; passage a la	ligne
    249	    011C  CD 21				 int	 21h
    250	    011E  C3				 ret
    251	    011F				 endp
    252
    253						 end
